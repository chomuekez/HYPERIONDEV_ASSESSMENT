@inject Microsoft.AspNetCore.Http.IHttpContextAccessor _httpContextAccessor
@model IEnumerable<HYPERION_ASSESSMENT.Models.Role>

@{
    ViewData["Title"] = "Index";
}

<h4>List Of Roles</h4>

<p>
    <a asp-action="Create" class="btn btn-success">Add New Role</a>
</p>
@using (Html.BeginForm("Index", "Roles", FormMethod.Get))
{
    <b>Search By:&nbsp;&nbsp;</b>
    @Html.RadioButton("SearchBy", "Rolename",true)<text>&nbsp;</text><text>Role Name</text>

  

    
    <div class="pull-right">
        @Html.TextBox("Search")<text>&nbsp;</text>
        <input type="submit" value="Search" class="btn btn-primary" />
    </div>
}
<tr>
    <th>
        @Html.ActionLink("","Index", new {SearchBy=_httpContextAccessor.HttpContext.Request.Query["SearchBy"],Search=_httpContextAccessor.HttpContext.Request.Query["Search"]})

    </th>

</tr>
@if (Model.Count() == 0)
{
    <tr>
        <td colspan="5">
            <h5 style="color:#ff0000;">No rows match Search Criteria !! </h5>
        </td>
    </tr>
}

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Rolename)
            </th>
            <th>ACTION</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Rolename)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.RoleId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.RoleId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.RoleId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
